name: release ci/cd

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    name: Build Linux x86_64 native
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install OpenSSL dev and pkg-config
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config curl build-essential

      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup default stable
          rustup component add rustfmt

      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build project for x86_64-unknown-linux-gnu
        run: |
          source $HOME/.cargo/env
          cargo build --target x86_64-unknown-linux-gnu --release

      - name: Upload Linux binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: meow-linux-x86_64
          path: target/x86_64-unknown-linux-gnu/release/meow

  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target ${{ matrix.target }}
        run: rustup target add ${{ matrix.target }}

      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}

      - name: Build for ${{ matrix.target }}
        run: cargo build --target ${{ matrix.target }} --release

      - name: Upload macOS binary ${{ matrix.target }}
        uses: actions/upload-artifact@v4
        with:
          name: meow-macos-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/meow

  build-windows:
    name: Build Windows Binary
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          $Env:CARGO_HOME = "$Env:USERPROFILE\.cargo"
          $Env:PATH = "$Env:CARGO_HOME\bin;$Env:PATH"
          rustup default stable
          rustup component add rustfmt

      - name: Install Rust target x86_64-pc-windows-msvc
        run: rustup target add x86_64-pc-windows-msvc

      - name: Cache cargo registry and target
        uses: actions/cache@v3
        with:
          path: |
            $Env:USERPROFILE\.cargo\registry
            $Env:USERPROFILE\.cargo\git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build for Windows
        run: cargo build --target x86_64-pc-windows-msvc --release

      - name: Upload Windows binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: meow-windows-x86_64
          path: target\x86_64-pc-windows-msvc\release\meow.exe

  release:
    name: Publish GitHub Release
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: meow-linux-x86_64
          path: ./release/linux

      - name: Download macOS x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: meow-macos-x86_64-apple-darwin
          path: ./release/macos/x86_64

      - name: Download macOS aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: meow-macos-aarch64-apple-darwin
          path: ./release/macos/aarch64

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: meow-windows-x86_64
          path: ./release/windows

      - name: Rename all binaries for release
        run: |
          mv release/linux/meow release/meow-linux-x86_64
          mv release/macos/x86_64/meow release/meow-macos-x86_64
          mv release/macos/aarch64/meow release/meow-macos-aarch64
          mv release/windows/meow.exe release/meow-windows-x86_64.exe

      - name: Create GitHub Release and upload binaries
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/meow-linux-x86_64
            release/meow-macos-x86_64
            release/meow-macos-aarch64
            release/meow-windows-x86_64.exe
